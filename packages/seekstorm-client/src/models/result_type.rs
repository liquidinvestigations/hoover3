/*
 * SeekStorm REST API documentation
 *
 * Search engine library & multi-tenancy server
 *
 * The version of the OpenAPI document: 0.12.11
 * Contact: wolf.garbe@seekstorm.com
 * Generated by: https://openapi-generator.tech
 */

use crate::models;
use serde::{Deserialize, Serialize};

/// ResultType : The following result types are supported: - **Count** (count all results that match the query, but returning top-k results is not required) - **Topk** (returns the top-k results per query, but counting all results that match the query is not required) - **TopkCount** (returns the top-k results per query + count all results that match the query)
/// The following result types are supported: - **Count** (count all results that match the query, but returning top-k results is not required) - **Topk** (returns the top-k results per query, but counting all results that match the query is not required) - **TopkCount** (returns the top-k results per query + count all results that match the query)
#[derive(Clone, Copy, Debug, Eq, PartialEq, Ord, PartialOrd, Hash, Serialize, Deserialize)]
pub enum ResultType {
    #[serde(rename = "Count")]
    Count,
    #[serde(rename = "Topk")]
    Topk,
    #[serde(rename = "TopkCount")]
    TopkCount,
}

impl std::fmt::Display for ResultType {
    fn fmt(&self, f: &mut std::fmt::Formatter) -> std::fmt::Result {
        match self {
            Self::Count => write!(f, "Count"),
            Self::Topk => write!(f, "Topk"),
            Self::TopkCount => write!(f, "TopkCount"),
        }
    }
}

impl Default for ResultType {
    fn default() -> ResultType {
        Self::Count
    }
}
