/*
 * SeekStorm REST API documentation
 *
 * Search engine library & multi-tenancy server
 *
 * The version of the OpenAPI document: 0.12.11
 * Contact: wolf.garbe@seekstorm.com
 * Generated by: https://openapi-generator.tech
 */

use crate::models;
use serde::{Deserialize, Serialize};

#[derive(Clone, Default, Debug, PartialEq, Serialize, Deserialize)]
pub struct IndexResponseObject {
    /// Index ID
    #[serde(rename = "id")]
    pub id: i64,
    /// Index name
    #[serde(rename = "name")]
    pub name: String,
    #[serde(rename = "schema")]
    pub schema: std::collections::HashMap<String, models::SchemaField>,
    /// Number of indexed documents
    #[serde(rename = "indexed_doc_count")]
    pub indexed_doc_count: i32,
    /// Number of operations: index, update, delete, queries
    #[serde(rename = "operations_count")]
    pub operations_count: i64,
    /// Number of queries, for quotas and billing
    #[serde(rename = "query_count")]
    pub query_count: i64,
    /// SeekStorm version the index was created with
    #[serde(rename = "version")]
    pub version: String,
    /// Minimum and maximum values of numeric facet fields
    #[serde(rename = "facets_minmax")]
    pub facets_minmax: std::collections::HashMap<String, models::MinMaxFieldJson>,
}

impl IndexResponseObject {
    pub fn new(
        id: i64,
        name: String,
        schema: std::collections::HashMap<String, models::SchemaField>,
        indexed_doc_count: i32,
        operations_count: i64,
        query_count: i64,
        version: String,
        facets_minmax: std::collections::HashMap<String, models::MinMaxFieldJson>,
    ) -> IndexResponseObject {
        IndexResponseObject {
            id,
            name,
            schema,
            indexed_doc_count,
            operations_count,
            query_count,
            version,
            facets_minmax,
        }
    }
}
