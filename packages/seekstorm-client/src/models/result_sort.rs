/*
 * SeekStorm REST API documentation
 *
 * Search engine library & multi-tenancy server
 *
 * The version of the OpenAPI document: 0.12.11
 * Contact: wolf.garbe@seekstorm.com
 * Generated by: https://openapi-generator.tech
 */

use crate::models;
use serde::{Deserialize, Serialize};

/// ResultSort : Specifies the sort order for the search results.
#[derive(Clone, Default, Debug, PartialEq, Serialize, Deserialize)]
pub struct ResultSort {
    /// name of the facet field to sort by
    #[serde(rename = "field")]
    pub field: String,
    /// Sort order: Ascending or Descending
    #[serde(rename = "order")]
    pub order: models::SortOrder,
    /// Base value/point for (geo) proximity sorting
    #[serde(rename = "base")]
    pub base: Box<models::FacetValue>,
}

impl ResultSort {
    /// Specifies the sort order for the search results.
    pub fn new(field: String, order: models::SortOrder, base: models::FacetValue) -> ResultSort {
        ResultSort {
            field,
            order,
            base: Box::new(base),
        }
    }
}
