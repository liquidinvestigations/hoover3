/*
 * SeekStorm REST API documentation
 *
 * Search engine library & multi-tenancy server
 *
 * The version of the OpenAPI document: 0.12.11
 * Contact: wolf.garbe@seekstorm.com
 * Generated by: https://openapi-generator.tech
 */

use crate::models;
use serde::{Deserialize, Serialize};

/// GetDocumentRequest : Specifies which document and which field to return
#[derive(Clone, Default, Debug, PartialEq, Serialize, Deserialize)]
pub struct GetDocumentRequest {
    /// query terms for highlighting
    #[serde(rename = "query_terms", skip_serializing_if = "Option::is_none")]
    pub query_terms: Option<Vec<String>>,
    /// which fields to highlight: create keyword-in-context fragments and highlight terms
    #[serde(rename = "highlights", skip_serializing_if = "Option::is_none")]
    pub highlights: Option<Vec<models::Highlight>>,
    /// which fields to return
    #[serde(rename = "fields", skip_serializing_if = "Option::is_none")]
    pub fields: Option<Vec<String>>,
    /// which distance fields to derive and return
    #[serde(rename = "distance_fields", skip_serializing_if = "Option::is_none")]
    pub distance_fields: Option<Vec<models::DistanceField>>,
}

impl GetDocumentRequest {
    /// Specifies which document and which field to return
    pub fn new() -> GetDocumentRequest {
        GetDocumentRequest {
            query_terms: None,
            highlights: None,
            fields: None,
            distance_fields: None,
        }
    }
}

