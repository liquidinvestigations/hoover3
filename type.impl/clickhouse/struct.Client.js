(function() {
    var type_impls = Object.fromEntries([["hoover3_database",[["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Client\" class=\"impl\"><a href=\"#impl-Client\" class=\"anchor\">§</a><h3 class=\"code-header\">impl Client</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.with_http_client\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">with_http_client</a>(client: impl HttpClient) -&gt; Client</h4></section></summary><div class=\"docblock\"><p>Creates a new client with a specified underlying HTTP client.</p>\n<p>See <code>HttpClient</code> for details.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.with_url\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">with_url</a>(self, url: impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.84.1/core/convert/trait.Into.html\" title=\"trait core::convert::Into\">Into</a>&lt;<a class=\"struct\" href=\"https://doc.rust-lang.org/1.84.1/alloc/string/struct.String.html\" title=\"struct alloc::string::String\">String</a>&gt;) -&gt; Client</h4></section></summary><div class=\"docblock\"><p>Specifies ClickHouse’s url. Should point to HTTP endpoint.</p>\n<h5 id=\"examples\"><a class=\"doc-anchor\" href=\"#examples\">§</a>Examples</h5>\n<div class=\"example-wrap\"><pre class=\"rust rust-example-rendered\"><code><span class=\"kw\">let </span>client = Client::default().with_url(<span class=\"string\">\"http://localhost:8123\"</span>);</code></pre></div>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.with_database\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">with_database</a>(self, database: impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.84.1/core/convert/trait.Into.html\" title=\"trait core::convert::Into\">Into</a>&lt;<a class=\"struct\" href=\"https://doc.rust-lang.org/1.84.1/alloc/string/struct.String.html\" title=\"struct alloc::string::String\">String</a>&gt;) -&gt; Client</h4></section></summary><div class=\"docblock\"><p>Specifies a database name.</p>\n<h5 id=\"examples-1\"><a class=\"doc-anchor\" href=\"#examples-1\">§</a>Examples</h5>\n<div class=\"example-wrap\"><pre class=\"rust rust-example-rendered\"><code><span class=\"kw\">let </span>client = Client::default().with_database(<span class=\"string\">\"test\"</span>);</code></pre></div>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.with_user\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">with_user</a>(self, user: impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.84.1/core/convert/trait.Into.html\" title=\"trait core::convert::Into\">Into</a>&lt;<a class=\"struct\" href=\"https://doc.rust-lang.org/1.84.1/alloc/string/struct.String.html\" title=\"struct alloc::string::String\">String</a>&gt;) -&gt; Client</h4></section></summary><div class=\"docblock\"><p>Specifies a user.</p>\n<h5 id=\"examples-2\"><a class=\"doc-anchor\" href=\"#examples-2\">§</a>Examples</h5>\n<div class=\"example-wrap\"><pre class=\"rust rust-example-rendered\"><code><span class=\"kw\">let </span>client = Client::default().with_user(<span class=\"string\">\"test\"</span>);</code></pre></div>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.with_password\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">with_password</a>(self, password: impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.84.1/core/convert/trait.Into.html\" title=\"trait core::convert::Into\">Into</a>&lt;<a class=\"struct\" href=\"https://doc.rust-lang.org/1.84.1/alloc/string/struct.String.html\" title=\"struct alloc::string::String\">String</a>&gt;) -&gt; Client</h4></section></summary><div class=\"docblock\"><p>Specifies a password.</p>\n<h5 id=\"examples-3\"><a class=\"doc-anchor\" href=\"#examples-3\">§</a>Examples</h5>\n<div class=\"example-wrap\"><pre class=\"rust rust-example-rendered\"><code><span class=\"kw\">let </span>client = Client::default().with_password(<span class=\"string\">\"secret\"</span>);</code></pre></div>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.with_compression\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">with_compression</a>(self, compression: Compression) -&gt; Client</h4></section></summary><div class=\"docblock\"><p>Specifies a compression mode. See [<code>Compression</code>] for details.\nBy default, <code>Lz4</code> is used.</p>\n<h5 id=\"examples-4\"><a class=\"doc-anchor\" href=\"#examples-4\">§</a>Examples</h5>\n<div class=\"example-wrap\"><pre class=\"rust rust-example-rendered\"><code><span class=\"kw\">let </span>client = Client::default().with_compression(Compression::Lz4Hc(<span class=\"number\">4</span>));</code></pre></div>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.with_option\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">with_option</a>(\n    self,\n    name: impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.84.1/core/convert/trait.Into.html\" title=\"trait core::convert::Into\">Into</a>&lt;<a class=\"struct\" href=\"https://doc.rust-lang.org/1.84.1/alloc/string/struct.String.html\" title=\"struct alloc::string::String\">String</a>&gt;,\n    value: impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.84.1/core/convert/trait.Into.html\" title=\"trait core::convert::Into\">Into</a>&lt;<a class=\"struct\" href=\"https://doc.rust-lang.org/1.84.1/alloc/string/struct.String.html\" title=\"struct alloc::string::String\">String</a>&gt;,\n) -&gt; Client</h4></section></summary><div class=\"docblock\"><p>Used to specify options that will be passed to all queries.</p>\n<h5 id=\"example\"><a class=\"doc-anchor\" href=\"#example\">§</a>Example</h5>\n<div class=\"example-wrap\"><pre class=\"rust rust-example-rendered\"><code>Client::default().with_option(<span class=\"string\">\"allow_nondeterministic_mutations\"</span>, <span class=\"string\">\"1\"</span>);</code></pre></div>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.with_header\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">with_header</a>(\n    self,\n    name: impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.84.1/core/convert/trait.Into.html\" title=\"trait core::convert::Into\">Into</a>&lt;<a class=\"struct\" href=\"https://doc.rust-lang.org/1.84.1/alloc/string/struct.String.html\" title=\"struct alloc::string::String\">String</a>&gt;,\n    value: impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.84.1/core/convert/trait.Into.html\" title=\"trait core::convert::Into\">Into</a>&lt;<a class=\"struct\" href=\"https://doc.rust-lang.org/1.84.1/alloc/string/struct.String.html\" title=\"struct alloc::string::String\">String</a>&gt;,\n) -&gt; Client</h4></section></summary><div class=\"docblock\"><p>Used to specify a header that will be passed to all queries.</p>\n<h5 id=\"example-1\"><a class=\"doc-anchor\" href=\"#example-1\">§</a>Example</h5>\n<div class=\"example-wrap\"><pre class=\"rust rust-example-rendered\"><code>Client::default().with_header(<span class=\"string\">\"Cookie\"</span>, <span class=\"string\">\"A=1\"</span>);</code></pre></div>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.insert\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">insert</a>&lt;T&gt;(&amp;self, table: &amp;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.84.1/std/primitive.str.html\">str</a>) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.84.1/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;Insert&lt;T&gt;, Error&gt;<div class=\"where\">where\n    T: Row,</div></h4></section></summary><div class=\"docblock\"><p>Starts a new INSERT statement.</p>\n<h5 id=\"panics\"><a class=\"doc-anchor\" href=\"#panics\">§</a>Panics</h5>\n<p>If <code>T</code> has unnamed fields, e.g. tuples.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.query\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">query</a>(&amp;self, query: &amp;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.84.1/std/primitive.str.html\">str</a>) -&gt; Query</h4></section></summary><div class=\"docblock\"><p>Starts a new SELECT/DDL query.</p>\n</div></details></div></details>",0,"hoover3_database::db_management::clickhouse::ClickhouseDatabaseHandle"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Clone-for-Client\" class=\"impl\"><a href=\"#impl-Clone-for-Client\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.84.1/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a> for Client</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.clone\" class=\"method trait-impl\"><a href=\"#method.clone\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.84.1/core/clone/trait.Clone.html#tymethod.clone\" class=\"fn\">clone</a>(&amp;self) -&gt; Client</h4></section></summary><div class='docblock'>Returns a copy of the value. <a href=\"https://doc.rust-lang.org/1.84.1/core/clone/trait.Clone.html#tymethod.clone\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.clone_from\" class=\"method trait-impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.0.0\">1.0.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.84.1/src/core/clone.rs.html#174\">Source</a></span><a href=\"#method.clone_from\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.84.1/core/clone/trait.Clone.html#method.clone_from\" class=\"fn\">clone_from</a>(&amp;mut self, source: &amp;Self)</h4></section></summary><div class='docblock'>Performs copy-assignment from <code>source</code>. <a href=\"https://doc.rust-lang.org/1.84.1/core/clone/trait.Clone.html#method.clone_from\">Read more</a></div></details></div></details>","Clone","hoover3_database::db_management::clickhouse::ClickhouseDatabaseHandle"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Default-for-Client\" class=\"impl\"><a href=\"#impl-Default-for-Client\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.84.1/core/default/trait.Default.html\" title=\"trait core::default::Default\">Default</a> for Client</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.default\" class=\"method trait-impl\"><a href=\"#method.default\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.84.1/core/default/trait.Default.html#tymethod.default\" class=\"fn\">default</a>() -&gt; Client</h4></section></summary><div class='docblock'>Returns the “default value” for a type. <a href=\"https://doc.rust-lang.org/1.84.1/core/default/trait.Default.html#tymethod.default\">Read more</a></div></details></div></details>","Default","hoover3_database::db_management::clickhouse::ClickhouseDatabaseHandle"]]]]);
    if (window.register_type_impls) {
        window.register_type_impls(type_impls);
    } else {
        window.pending_type_impls = type_impls;
    }
})()
//{"start":55,"fragment_lengths":[11514]}