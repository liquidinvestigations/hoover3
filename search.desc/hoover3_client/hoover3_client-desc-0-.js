searchState.loadedDescShard("hoover3_client", 0, "The Hoover3 client library - the website frontend …\nThis module contains the server wrappers for all the API …\nApp component - the whole website as a single component.\nThis module contains the components for the Hoover3 client.\nThis module contains the error handling for the Hoover3 …\nThis module contains the pages for the Hoover3 client. …\nThis module contains the routes for the Hoover3 client. …\nThis module contains time helpers for WASM clients.\nStruct records previous server calls, their timing and …\nAPI Client wrapper - server part\nAPI Client wrapper - server part\nAPI Client wrapper - server part\nAPI Client wrapper - server part\nAPI Client wrapper - server part\nAPI Client wrapper - server part\nAPI Client wrapper - server part\nAPI Client wrapper - server part\nAPI Client wrapper - server part\nAPI Client wrapper - server part\nAPI Client wrapper - server part\nAPI Client wrapper - server part\nAPI Client wrapper - server part\nAPI Client wrapper - server part\nAPI Client wrapper - server part\nAPI Client wrapper - server part\nAPI Client wrapper - server part\nPush a server end call event to the server call history. …\nPush a server start call event to the server call history. …\nString representation of the arguments passed to the …\nAPI Client wrapper - client part - for the backend function\nAPI Client wrapper - client part - for the backend function\nAPI Client wrapper - client part - for the backend function\nAPI Client wrapper - client part - for the backend function\nDuration of the server call in seconds\nResult::flatten() is unstable/nightly, so we implement it …\nReturns the argument unchanged.\nName of the server function that was called\nAPI Client wrapper - client part - for the backend function\nAPI Client wrapper - client part - for the backend function\nAPI Client wrapper - client part - for the backend function\nAPI Client wrapper - client part - for the backend function\nAPI Client wrapper - client part - for the backend function\nAPI Client wrapper - client part - for the backend function\nAPI Client wrapper - client part - for the backend function\nAPI Client wrapper - client part - for the backend function\nCalls <code>U::from(self)</code>.\nWhether the server call has completed\nWhether the server call completed successfully\nAPI Client wrapper - client part - for the backend function\nString representation of the return value\nAPI Client wrapper - client part - for the backend function\nAPI Client wrapper - client part - for the backend function\nTimestamp when the server call was initiated\nAPI Client wrapper - client part - for the backend function\nAPI Client wrapper - client part - for the backend function\nSerialized arguments for the [<code>__create_datasource__</code>] …\nAPI Client wrapper - server part\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nSerialized arguments for the [<code>__create_new_collection__</code>] …\nAPI Client wrapper - server part\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nSerialized arguments for the [<code>__db_explorer_run_query__</code>] …\nAPI Client wrapper - server part\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nSerialized arguments for the [<code>__drop_collection__</code>] server …\nAPI Client wrapper - server part\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nSerialized arguments for the [<code>__get_all_collections__</code>] …\nAPI Client wrapper - server part\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nSerialized arguments for the [<code>__get_all_datasources__</code>] …\nAPI Client wrapper - server part\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nSerialized arguments for the [<code>__get_collection_schema__</code>] …\nAPI Client wrapper - server part\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nSerialized arguments for the [<code>__get_container_status__</code>] …\nAPI Client wrapper - server part\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nSerialized arguments for the [<code>__get_datasource__</code>] server …\nAPI Client wrapper - server part\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nSerialized arguments for the [<code>__get_scan_status__</code>] server …\nAPI Client wrapper - server part\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nSerialized arguments for the [<code>__get_single_collection__</code>] …\nAPI Client wrapper - server part\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nSerialized arguments for the [<code>__get_workflow_status_tree__</code>]…\nAPI Client wrapper - server part\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nSerialized arguments for the [<code>__list_directory__</code>] server …\nAPI Client wrapper - server part\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nSerialized arguments for the [<code>__scylla_row_count__</code>] server …\nAPI Client wrapper - server part\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nSerialized arguments for the [<code>__start_scan__</code>] server …\nAPI Client wrapper - server part\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nSerialized arguments for the [<code>__update_collection__</code>] …\nAPI Client wrapper - server part\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nSerialized arguments for the [<code>__wait_for_scan_results__</code>] …\nAPI Client wrapper - server part\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nThe main app component that loads extra CSS and the router.\nContext containing the current app URL as string.\nContext provider for server call history and global …\nCallback to push a server call event to the server call …\nReturns the argument unchanged.\nReturns the argument unchanged.\nThe new URL as string.\nSignal for reading server call history.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nSignal for the loading count (the current number of …\nPush a server call event to the server call history.\nRead the server call history.\nSignal for showing the global loading spinner.\nTrait for displaying a data row in a table. The column …\nTable component that displays the result of a dynamic …\nTable component that displays the result of a dynamic …\nProperties for the [<code>DynamicTableInner</code>] component.\nProperties for the [<code>DynamicTable</code>] component.\nComponent that displays a table of data, using the …\nProps for the HtmlTable component:\nComponent that displays a card with a title, fields for a …\nProps for the InfoCard component:\nComponent that displays a page title. Level is 0 for no …\nProperties for the [<code>PageTitle</code>] component.\nCreate a page title element. This is a helper function for …\nTrait for displaying a data row in a table. The column …\nTable component that displays the result of a dynamic …\nTable component that displays the result of a dynamic …\nProperties for the [<code>DynamicTableInner</code>] component.\nProperties for the [<code>DynamicTable</code>] component.\nComponent that displays a table of data, using the …\nProps for the HtmlTable component:\nComponent that displays a card with a title, fields for a …\nProps for the InfoCard component:\nCreate a builder for building <code>HtmlTableProps_</code>. On the …\nCreate a builder for building <code>InfoCardProps_</code>. On the …\nCreate a builder for building <code>DynamicTableProps</code>. On the …\nCreate a builder for building <code>DynamicTableInnerProps</code>. On …\nCheck if a column can be edited. These must be known at …\nCheck if a column can be edited. These must be known at …\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nGet the values of the editable fields in the row. This is …\nGet the values of the editable fields in the row. This is …\nGet the headers of the table. These must be known at …\nGet the headers of the table. These must be known at …\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nRender a cell in the table. Default implementation dumps …\nRender a cell in the table. Default implementation dumps …\nSet the editable fields on the row. This function is used …\nSet the editable fields on the row. This function is used …\nComponent that displays a page title. Level is 0 for no …\nProperties for the [<code>PageTitle</code>] component.\nCreate a builder for building <code>PageTitleProps</code>. On the …\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCreate a page title element. This is a helper function for …\nTrait for the <code>.throw()</code> method for Results and Options. …\nThe type of the value that is being returned.\nThrow the error, with a default context string.\nThrow the error, with a custom context string.\nAdmin Page that displays the details of a collection and a …\nProperties for the [<code>CollectionAdminDetailsPage</code>] component.\nRoute for a collection page.\nAdmin Page that displays the list of collections.\nPage that displays a dashboard iframe.\nProperties for the [<code>DashboardIframePage</code>] component.\nNavbar dropdown that displays a list of dashboard links.\nMain Page that displays the database explorer. Because the …\nProperties for the [<code>DatabaseExplorerPage</code>] component.\nPage that displays the SQL query tool.\nProperties for the [<code>DatabaseExplorerQueryToolPage</code>] …\nRouter for the database explorer sub-app.\nAdmin Page that displays the details of a data source.\nProperties for the [<code>DatasourceAdminDetailsPage</code>] component.\nPage that displays a tool for translating HTML to DX.\nPage that displays the health of Docker containers.\nRoute for a graph edge page.\nRoute for a graph node page.\nHome page with main search interface.\nAdmin Page that displays the form for creating a new data …\nProperties for the [<code>NewDatasourceFormPage</code>] component.\nRoute for the SQL query tool page.\nRoute for the root page of the database explorer.\nRoute for a search index page.\nPage that displays the server call log table.\nState for the SQL query tool, the part kept in the URL.\nRoute for a SQL table page.\nComponent that displays the status of a workflow, …\nProperties for the [<code>WorkflowStatusDisplay</code>] component.\nSQL query as text\nProps\nProperties for the [<code>ButtonGroup</code>] component.\nAdmin Page that displays the details of a collection and a …\nProperties for the [<code>CollectionAdminDetailsPage</code>] component.\nProps\nProperties for the [<code>CollectionDatasourceListCard</code>] …\nComponent that displays the details of a collection, …\nProperties for the [<code>CollectionInfoCard</code>] component.\nAdmin Page that displays the list of collections.\nProps\nProperties for the [<code>CollectionsCreateWidget</code>] component.\nCreate a builder for building <code>ButtonGroupProps</code>. On the …\nCreate a builder for building <code>CollectionsCreateWidgetProps</code>.\nCreate a builder for building …\nCreate a builder for building <code>CollectionInfoCardProps</code>. On …\nCreate a builder for building …\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nAdmin Page that displays the details of a data source.\nProperties for the [<code>DatasourceAdminDetailsPage</code>] component.\nProps\nProperties for the [<code>DatasourceInfoCard</code>] component.\nProps\nProperties for the [<code>WorkflowDisplayProgressBar</code>] component.\nComponent that displays the status of a workflow, …\nProperties for the [<code>WorkflowStatusDisplay</code>] component.\nCreate a builder for building …\nCreate a builder for building <code>DatasourceInfoCardProps</code>. On …\nCreate a builder for building <code>WorkflowStatusDisplayProps</code>. …\nCreate a builder for building …\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nProps\nProperties for the [<code>DatasourcePathPicker</code>] component.\nAdmin Page that displays the form for creating a new data …\nProperties for the [<code>NewDatasourceFormPage</code>] component.\nActual page that displays the form for creating a new data …\nProperties for the [<code>_NewDatasourceFormPage</code>] component.\nCreate a builder for building <code>NewDatasourceFormPageProps</code>. …\nCreate a builder for building <code>_NewDatasourceFormPageProps</code>. …\nCreate a builder for building <code>DatasourcePathPickerProps</code>. …\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nHome page with main search interface.\nPage that displays a dashboard iframe.\nProperties for the [<code>DashboardIframePage</code>] component.\nNavbar dropdown that displays a list of dashboard links.\nCreate a builder for building <code>DashboardIframePageProps</code>. On …\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nProps\nProperties for the [<code>CardGridDisplay</code>] component.\nRoute for a collection page.\nProps\nProperties for the [<code>CollectionStatsInfoCard</code>] component.\nProps\nProps\nProperties for the […\nProps\nProperties for the […\nProperties for the [<code>DatabaseExplorerCollectionPage</code>] …\nProps\nProperties for the […\nProps\nProperties for the [<code>DatabaseExplorerCollectionPageSqlTable</code>]…\nProps\nProperties for the [<code>DatabaseExplorerHeader</code>] component.\nMain Page that displays the database explorer. Because the …\nProperties for the [<code>DatabaseExplorerPage</code>] component.\nRouter for the database explorer sub-app.\nProps\nProperties for the [<code>GraphEdgesCards</code>] component.\nRoute for a graph edge page.\nProps\nProperties for the [<code>GraphNodesCards</code>] component.\nRoute for a graph node page.\nProps\nProperties for the [<code>LinkCard</code>] component.\nRoute for the SQL query tool page.\nRoute for the root page of the database explorer.\nProps\nProperties for the [<code>SQLRowCountDisplayString</code>] component.\nProps\nProperties for the [<code>SQLTableCards</code>] component.\nProps\nProperties for the [<code>SearchIndexCards</code>] component.\nRoute for a search index page.\nRoute for a SQL table page.\nInternal component that switches between the different …\nProperties for the [<code>_DatabaseExplorerPage</code>] component.\nCreate a builder for building <code>DatabaseExplorerPageProps</code>. …\nCreate a builder for building <code>_DatabaseExplorerPageProps</code>. …\nCreate a builder for building <code>LinkCardProps</code>. On the …\nCreate a builder for building <code>CardGridDisplayProps</code>. On the …\nCreate a builder for building <code>CollectionStatsInfoCardProps</code>.\nCreate a builder for building …\nCreate a builder for building <code>SQLTableCardsProps</code>. On the …\nCreate a builder for building <code>SQLRowCountDisplayStringProps</code>…\nCreate a builder for building <code>GraphNodesCardsProps</code>. On the …\nCreate a builder for building <code>GraphEdgesCardsProps</code>. On the …\nCreate a builder for building <code>SearchIndexCardsProps</code>. On …\nCreate a builder for building <code>DatabaseExplorerHeaderProps</code>. …\nCreate a builder for building …\nCreate a builder for building …\nCreate a builder for building …\nCreate a builder for building …\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nPage that displays the SQL query tool.\nProperties for the [<code>DatabaseExplorerQueryToolPage</code>] …\nProps\nProperties for the [<code>QueryToolSidebarLinksDisplay</code>] …\nProps\nProperties for the [<code>SqlQueryToolJumpLinks</code>] component.\nState for the SQL query tool, the part kept in the URL.\nCreate a builder for building …\nCreate a builder for building <code>SqlQueryToolJumpLinksProps</code>. …\nCreate a builder for building …\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nSQL query as text\nPage that displays the health of Docker containers.\nPage that displays a tool for translating HTML to DX.\nSerialized arguments for the <code>dx_translate</code> server function.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nPage that displays the server call log table.\nRoute to Admin Home Page\nRoute to Collection Admin Details\nRoute to Collections Admin List\nRoute to specific Dashboard Iframe\nRoute to Dashboard Home Page\nRoute to Database Explorer\nRoute to Database Explorer Home Page\nRoute to Datasource Admin Details\nRoute to Dioxus HTML Translator\nProps\nProperties for the [<code>DisplayError</code>] component.\nRoute to Docker Health Checker\nRoute to home page.\nComponent for a dropdown menu in the navbar.\nProperties for the [<code>NavbarDropdown</code>] component.\nComponent that wraps the main page with the navbar and …\nRoute to New Datasource Form\nComponent for displaying a page not found 404 wrong URL …\nRoute to Page Not Found 404 error\nProperties for the [<code>PageNotFound</code>] component.\nThe enum of all the routes for the Hoover3 client. To nest …\nRoute to Server Call Logs\nTools home page - lists all the sub-pages\nHelper for saving structs in URL as base64 strings.\nCreate a builder for building <code>DisplayErrorProps</code>. On the …\nCreate a builder for building <code>NavbarDropdownProps</code>. On the …\nCreate a builder for building <code>PageNotFoundProps</code>. On the …\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nHelper for saving structs in URL as base64 strings.\nConvert a signal of <code>UrlParam&lt;T&gt;</code> to a signal of <code>T</code> and a …\nReturns the argument unchanged.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCheck if the UrlParam is empty, as in it’s never been …\nCreate a new UrlParam with a value.\nWASM-compatible: Get the current time in seconds since the …\nWASM-compatible: Sleep for a given duration.")