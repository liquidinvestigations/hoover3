searchState.loadedDescShard("hoover3_types", 0, "Protocol consisting of types and structures shared across …\nTypes and structures related to collections.\nTypes and structures related to datasources - scan / mount …\nTypes and structures related to database schemas - Scylla, …\nTypes and structures related to Docker container health …\nTypes and structures related to filesystems, scanning.\nTypes and structures related to identifiers and their …\nTypes and structures related to stable hashing.\nTypes and structures related to workflow tasks.\nUI representation of a collection with metadata\nUser-facing Description of the collection’s contents\nUnique identifier for the collection\nUser-facing Display Title of the collection\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nTimestamp when the collection was first created\nTimestamp of the most recent modification to the collection\nConfiguration settings for different types of datasources …\nRepresents a row in the datasource UI table with …\nLocal filesystem datasource configuration\nAmazon S3 or compatible storage configuration\nWebDAV server configuration\nUnique identifier of the collection this datasource …\nUnique identifier of the datasource\nConfiguration settings specific to this datasource\nString representation of the datasource type\nReturns the argument unchanged.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nTimestamp when the datasource was created\nTimestamp when the datasource was last modified\nReturns a string representation of the datasource type\nAccess key for authentication\nName of the S3 bucket\nPassword for authentication\nPath to the local directory\nPath prefix within the bucket\nPath on the WebDAV server\nSecret key for authentication\nEndpoint URL for the S3 service\nURL of the WebDAV server\nUsername for authentication\nBoolean value\nBoolean value\nRepresents the complete schema for a collection across …\nRepresents a column in a database table\nRepresents the possible data types for database columns\nRepresents the different types of databases supported\nRepresents a database table structure\nRepresents actual values stored in the database\n64-bit floating point\n64-bit floating point value\nResponse structure for dynamic database queries\nContains the results of a dynamic database query\n32-bit floating point\n32-bit floating point value\nRepresents an edge type in a graph database\n16-bit integer\n16-bit integer value\n32-bit integer\n32-bit integer value\n64-bit integer\n64-bit integer value\n8-bit integer\n8-bit integer value\nList/array of values of a specific type\nList/array of database values\nMeilisearch search engine\nSchema information specific to Meilisearch database\nNebula Graph database\nSchema information specific to Nebula graph database\nComplex object type with named fields and their types\nComplex object with optional field values\nCustom or unknown data type\nCustom or unknown value type\nScyllaDB (Cassandra-compatible database)\nSchema information specific to Scylla database\nText/string data type\nText/string value\nTimestamp value\nUTC timestamp value\nData type of the column\nUnique identifier for the collection\nList of columns defined in the table\nList of column names and their types\nType of database that executed the query\nTotal number of documents in the collection\nList of edge types defined in the graph\nQuery execution time in seconds\nMap of field names to their occurrence count in the …\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nConverts a Nebula database type string into its …\nConverts a Scylla database type string into its …\nCreates a new DynamicQueryResult containing a single …\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nSchema information for Meilisearch database\nName/identifier of the table\nName/identifier of the column\nName/identifier of the edge type\nSchema information for Nebula database\nOptional pagination token for next page of results\nIndicates if this column is part of the primary key\nThe executed query string\nQuery result or error message\nRows of data, where each value is optional\nSchema information for Scylla database\nMap of table identifiers to their corresponding table …\nMap of vertex tag identifiers to their corresponding table …\nConverts this DatabaseColumnType into its corresponding …\nConverts this DatabaseColumnType into its corresponding …\nRepresents the health and status information for a single …\nHealth status of the container\nUnique identifier of the Docker container\nName of the Docker container\nCurrent running status of the container\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nUI representation of a directory entry with scan results\nUI representation of a file entry\nBasic metadata for a filesystem entry\nResults from scanning a datasource\nAdds two scan results together\nAdds another scan result to this one in place\nCreation timestamp\nCreation timestamp\nCreation timestamp\nID of the datasource containing this directory\nID of the datasource containing this file\nNumber of directories found\nNumber of errors encountered\nNumber of files found\nTotal size of all files in bytes\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nWhether the entry is a directory\nWhether the entry is a file\nLast modification timestamp\nLast modification timestamp\nLast modification timestamp\nPath to the filesystem entry\nPath to the directory\nPath to the file\nScan results for immediate children\nScan results for all descendants\nSize of the entry in bytes\nSize of the directory in bytes\nSize of the file in bytes\nRepresents a unique collection identifier\nDefault keyspace name used in the database\nRepresents a unique database identifier\nGenerates the database/keyspace name for this collection\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCreates a new collection ID after validating the input …\nCreates a new database identifier after validating the …\nComputes a stable hash for a given serializable key. The …\nWorkflow was manually canceled\nWorkflow has finished successfully\nWorkflow was continued as a new workflow instance\nWorkflow has encountered an error and failed\nWorkflow is currently executing\nRepresents a tree structure of workflow statuses and their …\nWorkflow was forcefully terminated\nWorkflow exceeded its time limit\nRepresents the status of a workflow task in the UI\nStatus codes representing different states of a workflow …\nStatus has not been specified\nMap of workflow IDs to their child workflow IDs\nMap of workflow IDs to their status code counts\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nMap of workflow IDs to their status codes\nMap of workflow IDs to their parent workflow IDs\nName of the queue the task belongs to\nStatus of the root workflow\nID of the top-level workflow in the tree\nName of the task\nCurrent status code of the workflow task\nAggregate counts of all status codes across all workflows\nUnique identifier of the workflow")